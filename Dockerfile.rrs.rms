#
# MIT License
#
# (C) Copyright 2025 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

FROM artifactory.algol60.net/csm-docker/stable/docker.io/library/alpine:3.21 AS base

WORKDIR /app

RUN apk add --upgrade --no-cache apk-tools && \
    apk update && \
    apk add --no-cache curl ca-certificates python3 py3-pip openssh python3-dev build-base && \
    update-ca-certificates

ADD requirements.txt constraints.txt /app/
ENV VIRTUAL_ENV=/app/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN python3 -m venv $VIRTUAL_ENV && \
    pip3 install --no-cache-dir -U pip -c constraints.txt && \
    pip3 install --no-cache-dir -U wheel -c constraints.txt && \
    pip3 install --no-cache-dir -r requirements.txt

FROM base AS build

ENV PYTHONPATH=/app
ENV FLASK_APP=""

# Copy rms sources
EXPOSE 8551
#COPY src/rrs/rms /app/src/rrs/rms
#COPY src/lib /app/src/lib
COPY src/ /app/src/

# Enable and start SSH service (consider security implications)
RUN mkdir -p /var/run/sshd
RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config
RUN ssh-keygen -A

# Configure SSH client for outgoing connections
RUN mkdir -p /root/.ssh && \
    echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null\n" > /root/.ssh/config

#CMD [ "python", "/app/src/rrs/rms/rms.py" ]
CMD /usr/sbin/sshd && python3 -m src.rrs.rms.rms
